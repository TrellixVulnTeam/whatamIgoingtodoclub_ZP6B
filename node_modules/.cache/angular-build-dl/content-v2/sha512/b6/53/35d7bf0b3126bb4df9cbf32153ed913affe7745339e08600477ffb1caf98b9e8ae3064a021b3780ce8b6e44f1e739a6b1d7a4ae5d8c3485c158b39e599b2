{"version":3,"sources":["webpack:///src/environments/environment.ts","webpack:///src/app/heroes/heroes.component.ts","webpack:///src/app/heroes/heroes.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/hero-detail/hero-detail.component.ts","webpack:///src/app/hero-detail/hero-detail.component.html","webpack:///src/app/to-do/to-do.component.ts","webpack:///src/app/to-do/to-do.component.html","webpack:///src/app/to-do-item/to-do-item.component.ts","webpack:///src/app/to-do-item/to-do-item.component.html","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["environment","production","HeroesComponent","AppComponent","AppModule","HeroDetailComponent","hero","ToDoComponent","hero2","hero3","hero4","bannerTitleText","title","toDos","toDoInputField1","newItemName2","ToDoItemComponent","bootstrapModule","err","console","error","webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id"],"mappings":"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","file":"main-es5.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-heroes',\n\n  templateUrl: './heroes.component.html',\n  styleUrls: ['./heroes.component.scss']\n})\nexport class HeroesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>heroes works!</p>\n\nhero = 'Windstorm',","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  @Input() title: \"What am I going to do Club v.0.1\";\n}\n","<app-to-do></app-to-do>","\n/// This what pulls them into your modules file. ( more javascript and ng)\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { AppComponent } from './app.component';\nimport { ToDoComponent } from './to-do/to-do.component';\nimport { ToDoItemComponent } from './to-do-item/to-do-item.component';\nimport { HeroDetailComponent } from './hero-detail/hero-detail.component';\nimport { HeroesComponent } from './heroes/heroes.component';\nimport { FormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ToDoComponent,\n    ToDoItemComponent,\n    HeroDetailComponent,\n    HeroesComponent,\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-hero-detail',\n  templateUrl: './hero-detail.component.html',\n  styleUrls: ['./hero-detail.component.scss']\n})\nexport class HeroDetailComponent implements OnInit {\n  hero = 'xavier'\n  constructor() { }\n  ngOnInit(): void {\n  }\n\n}\n\n\n\n\n\n","\n<h1>Welcome to the Exclusive What am I going to do Club!</h1>\n<h6>Licenses and limitations apply.</h6>\n\n<!-- <div *ngIf=\"hero\">\n    <div>\n      <label for=\"hero-name\">What do you need to do? </label>\n      <input id=\"hero-name\" [(ngModel)]=\"hero.name\" placeholder=\"Enter To Do Here\">\n    </div>\n  \n  </div>\n\n  <div *ngIf=\"hero\">\n\n    <h2>{{hero.name | uppercase}} Details </h2>\n  \n  </div> -->","import { Component, Input, OnInit, } from '@angular/core';\n\n@Component({\n  selector: 'app-to-do',\n  templateUrl: './to-do.component.html',\n  styleUrls: ['./to-do.component.scss']\n})\nexport class ToDoComponent implements OnInit {\n  hero = 'What are you going to do?';\n  hero2 = 'Jubilee';\n  hero3 = 'Wolverine';\n  hero4 = 'Storm';\n  bannerTitleText = 'Welcome to the What do you need to do Club!!!!';\n  @Input() title: string = 'What do you need to do?';\n  toDos: string[]=[]\n  toDoInputField1: string = 'jingleheimer John';\n  newItemName2: string = 'Click Here';\n  constructor() { }\n  ngOnInit(): void {\n  }\n}\n\n\n\n","<input [(ngModel)]=\"toDoInputField1\">\n<button>ADD!</button> \n\n<to-do-item ngModel=\"to-do-item\" ></to-do-item>\n<!-- <app-heroes></app-heroes> -->\n\n\n<!-- ngModel\n^ this is short hand for a 2 way binding. \n <input [(ngModel)]=\"newItemName\" #ctrl=\"ngModel\">\n-->","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-to-do-item',\n  templateUrl: './to-do-item.component.html',\n  styleUrls: ['./to-do-item.component.scss']\n})\nexport class ToDoItemComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>to-do-item works!</p>\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}