{"version":3,"sources":["webpack:///src/environments/environment.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/to-do/to-do.component.ts","webpack:///src/app/to-do/to-do.component.html","webpack:///src/app/to-do-item/to-do-item.component.ts","webpack:///src/app/to-do-item/to-do-item.component.html","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["environment","production","AppComponent","AppModule","ToDoComponent","title","toDos","newItemName","ToDoItemComponent","bootstrapModule","err","console","error","webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;;;AAAA;AAAA;AAAA,S,CAAA;AACA;AACA;;;AAEO,UAAMA,WAAW,GAAG;AACzBC,kBAAU,EAAE;AADa,OAApB;AAIP;;;;;;;AAOA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCRaC,Y;;;;;yBAAAA,Y;AAAY,O;;;cAAZA,Y;AAAY,iC;AAAA;AAAA;AAAA,S;AAAA,gB;AAAA,e;AAAA,2C;AAAA;AAAA;ACPzB;;;;;;;;;;;;;;;;;;;;;ACCA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAkBaC,S;;;;;yBAAAA,S;AAAS,O;;;cAATA,S;AAAS,oBAFR,2DAEQ;;;mBAHT,E;AAAE,kBAHJ,CACP,uEADO,CAGI;;;;4HAGFA,S,EAAS;AAAA,yBAVlB,2DAUkB,EATlB,oEASkB,EARlB,kFAQkB;AARD,oBAGjB,uEAHiB;AAQC,S;AALL,O;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCPJC,a;AAQX;AACA,iCAAc;AAAA;;AAPhB;AAEW,eAAAC,KAAA,GAAgB,yBAAhB;AACT,eAAAC,KAAA,GAAgB,EAAhB,CAIc,CAHd;;AACA,eAAAC,WAAA,GAAsB,mBAAtB;AAEiB;;;;iBACjB,oBAAQ,CACP;;;;;;;yBAXUH,a;AAAa,O;;;cAAbA,a;AAAa,kC;AAAA;AAAA;AAAA,S;AAAA,gB;AAAA,e;AAAA,4C;AAAA;AAAA;ACP1B;;AAEA;;;;AAFA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCOaI,iB;AAEX,qCAAc;AAAA;AAAG;;;;iBAEjB,oBAAQ,CACP;;;;;;;yBALUA,iB;AAAiB,O;;;cAAjBA,iB;AAAiB,uC;AAAA,gB;AAAA,e;AAAA;AAAA;ACP9B;;AAAG;;AAAiB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACMpB,UAAI,sEAAYP,UAAhB,EAA4B;AAC1B;AACD;;AAED,kFAAyBQ,eAAzB,CAAyC,yDAAzC,WACS,UAAAC,GAAG;AAAA,eAAIC,OAAO,CAACC,KAAR,CAAcF,GAAd,CAAJ;AAAA,OADZ;;;;;;;;;;;;;;;ACVA,eAASG,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,eAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,cAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,WAAC,CAACE,IAAF,GAAS,kBAAT;AACA,gBAAMF,CAAN;AACA,SAJM,CAAP;AAKA;;AACDL,8BAAwB,CAACQ,IAAzB,GAAgC,YAAW;AAAE,eAAO,EAAP;AAAY,OAAzD;;AACAR,8BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAS,YAAM,CAACC,OAAP,GAAiBV,wBAAjB;AACAA,8BAAwB,CAACW,EAAzB,GAA8B,MAA9B","file":"main-es5.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  @Input() title: \"What am I going to do Club v.0.1\";\n}\n","<app-to-do propertypotato=\"foo\">\n</app-to-do>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppComponent } from './app.component';\nimport { ToDoComponent } from './to-do/to-do.component';\nimport { ToDoItemComponent } from './to-do-item/to-do-item.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ToDoComponent,\n    ToDoItemComponent,\n  ],\n  imports: [\n    BrowserModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-to-do',\n  templateUrl: './to-do.component.html',\n  styleUrls: ['./to-do.component.scss']\n})\nexport class ToDoComponent implements OnInit {\n\n/// Properties are usually camelCase\n\n  @Input() title: string = 'john jacob jingleheimer';\n  toDos: string[]=[]\n  /// ^ this initializes an empty array (the equals part)\n  newItemName: string = 'jingleheimer John';\n  /// @Input() newItemName: string = 'jingleheimer John';\n  constructor() { }\n  ngOnInit(): void {\n  }\n}","{{title}}\n\n<input ngModel=\"newItemName\">\n\n\n<!-- ngModel\n^ this is short hand for a 2 way binding. \n <input [(ngModel)]=\"newItemName\" #ctrl=\"ngModel\">\n-->","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-to-do-item',\n  templateUrl: './to-do-item.component.html',\n  styleUrls: ['./to-do-item.component.scss']\n})\nexport class ToDoItemComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>to-do-item works!</p>\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}